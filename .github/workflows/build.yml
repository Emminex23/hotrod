name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      customer: ${{ steps.filter.outputs.customer }}
      driver: ${{ steps.filter.outputs.driver }}
      frontend: ${{ steps.filter.outputs.frontend }}
      route: ${{ steps.filter.outputs.route }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          customer:
            - 'services/customer/**'
            - 'cmd/customer.go'
            - 'pkg/**'
          driver:
            - 'services/driver/**'
            - 'cmd/driver.go'
            - 'pkg/**'
          frontend:
            - 'services/frontend/**'
            - 'cmd/frontend.go'
            - 'pkg/**'
          route:
            - 'services/route/**'
            - 'cmd/route.go'
            - 'pkg/**'

  build:
    runs-on: ubuntu-latest
    outputs:
      prNumber: ${{ steps.findPr.outputs.number }}
    steps:
    - uses: actions/checkout@v2
    # Find the PR associated with this push, if there is one.
    - uses: jwalton/gh-find-current-pr@v1
      id: findPr
    # This will echo "Your PR is 7", or be skipped if there is no current PR.
    - run: echo "Your PR is ${PR}"
      if: success() && steps.findPr.outputs.number
      env:
        PR: ${{ steps.findPr.outputs.pr }}


    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: |
        # todo: add go generate after fixing it for frontend.
        go build -o hotrod

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker Login
      uses: docker/login-action@v1.9.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build customer image
      if: ${{ needs.changes.outputs.customer == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-customer:${{ github.sha }}

    - name: Build driver image
      if: ${{ needs.changes.outputs.driver == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-driver:${{ github.sha }}

    - name: Build frontend image
      if: ${{ needs.changes.outputs.frontend == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-frontend:${{ github.sha }}
      
    - name: Build route image
      if: ${{ needs.changes.outputs.route == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-route:${{ github.sha }}

  update_signadot_customer:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.customer == 'false' }}
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1.1.1
      with:
        args: >- 
          -H 'Content-Type:application/json'
          -H 'Authorization:Bearer ${{ secrets.SIGNADOT_TOKEN }}'
          -d '{\"org\":\"signadot\",\"cluster\":\"demo\",\"namespace\":\"hotrod\",\"defaultService\":\"frontend\",\"defaultServicePort\":8080,\"images\":[{\"name\":\"signadot\/hotrod-frontend\",\"newTag\":\"${{ github.sha }}\"}]}'
          https://api.signadot.com/api/v1/repos/signadot/hotrod/pulls/${{ build.outputs.prNumber }}/workspaces

  update_signadot_driver:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.driver == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: call signadot API
      run: |
         echo "TODO: calling API for (driver, signadot/hotrod:${{ github.sha }})"
      shell: bash

  update_signadot_frontend:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: call signadot API
      run: |
         echo "TODO: calling API for (frontend, signadot/hotrod:${{ github.sha }})"
      shell: bash

  update_signadot_route:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.route == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: call signadot API
      run: |
         echo "TODO: calling API for (route, signadot/hotrod:${{ github.sha }})"
      shell: bash
