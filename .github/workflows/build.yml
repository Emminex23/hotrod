name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 1.16

jobs:
  # run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      customer: ${{ steps.filter.outputs.customer }}
      driver: ${{ steps.filter.outputs.driver }}
      frontend: ${{ steps.filter.outputs.frontend }}
      route: ${{ steps.filter.outputs.route }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          customer:
            - 'services/customer/**'
            - 'cmd/customer.go'
            - 'pkg/**'
          driver:
            - 'services/driver/**'
            - 'cmd/driver.go'
            - 'pkg/**'
          frontend:
            - 'services/frontend/**'
            - 'cmd/frontend.go'
            - 'pkg/**'
          route:
            - 'services/route/**'
            - 'cmd/route.go'
            - 'pkg/**'

  build:
    runs-on: ubuntu-latest
    needs: [changes]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GO_VERSION }}-mod-

    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GO_VERSION }}-build-

    - name: Build
      run: |
        ./build.sh

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker Login
      uses: docker/login-action@v1.9.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build customer image
      if: ${{ needs.changes.outputs.customer == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-customer:${{ github.sha }}

    - name: Build driver image
      if: ${{ needs.changes.outputs.driver == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-driver:${{ github.sha }}

    - name: Build frontend image
      if: ${{ needs.changes.outputs.frontend == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-frontend:${{ github.sha }}
      
    - name: Build route image
      if: ${{ needs.changes.outputs.route == 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: signadot/hotrod-route:${{ github.sha }}

  update_signadot_customer:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.customer == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1.1.1
      with:
        args: >- 
          -H 'Content-Type: application/json'
          -H 'Authorization: Bearer ${{ secrets.SIGNADOT_TOKEN }}'
          -d '{\"org\":\"signadot\",\"cluster\":\"demo\",\"namespace\":\"hotrod\",\"defaultService\":\"frontend\",\"defaultServicePort\":8080,\"images\":[{\"name\":\"signadot\/hotrod-customer\",\"newTag\":\"${{ github.sha }}\"}]}'
          https://api.signadot.com/api/v1/repos/signadot/hotrod/pulls/${{ github.event.number }}/workspaces

  update_signadot_driver:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.driver == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1.1.1
      with:
        args: >- 
          -H 'Content-Type: application/json'
          -H 'Authorization: Bearer ${{ secrets.SIGNADOT_TOKEN }}'
          -d '{\"org\":\"signadot\",\"cluster\":\"demo\",\"namespace\":\"hotrod\",\"defaultService\":\"frontend\",\"defaultServicePort\":8080,\"images\":[{\"name\":\"signadot\/hotrod-driver\",\"newTag\":\"${{ github.sha }}\"}]}'
          https://api.signadot.com/api/v1/repos/signadot/hotrod/pulls/${{ github.event.number }}/workspaces

  update_signadot_frontend:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1.1.1
      with:
        args: >- 
          -H 'Content-Type: application/json'
          -H 'Authorization: Bearer ${{ secrets.SIGNADOT_TOKEN }}'
          -d '{\"org\":\"signadot\",\"cluster\":\"demo\",\"namespace\":\"hotrod\",\"defaultService\":\"frontend\",\"defaultServicePort\":8080,\"images\":[{\"name\":\"signadot\/hotrod-frontend\",\"newTag\":\"${{ github.sha }}\"}]}'
          https://api.signadot.com/api/v1/repos/signadot/hotrod/pulls/${{ github.event.number }}/workspaces

  update_signadot_route:
    needs: [build, changes]
    if: ${{ needs.changes.outputs.route == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1.1.1
      with:
        args: >- 
          -H 'Content-Type: application/json'
          -H 'Authorization: Bearer ${{ secrets.SIGNADOT_TOKEN }}'
          -d '{\"org\":\"signadot\",\"cluster\":\"demo\",\"namespace\":\"hotrod\",\"defaultService\":\"frontend\",\"defaultServicePort\":8080,\"images\":[{\"name\":\"signadot\/hotrod-route\",\"newTag\":\"${{ github.sha }}\"}]}'
          https://api.signadot.com/api/v1/repos/signadot/hotrod/pulls/${{ github.event.number }}/workspaces
