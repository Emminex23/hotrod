stages:
- run_tests

run_tests:
  stage: run_tests
  image: golang
  variables:
    SANDBOX_NAME: "gitlab-mr-${CI_MERGE_REQUEST_ID}"
    NAMESPACE: hotrod-devmesh
  script: |
    # Set up Signadot CLI
    apt update; apt install -y jq
    curl -sSLf https://raw.githubusercontent.com/signadot/cli/installation-script/scripts/install.sh | sh

    # Create a sandbox
    echo "Creating sandbox ${SANDBOX_NAME}..."
    signadot sandbox apply \
      --set name=${SANDBOX_NAME} \
      --set service=driver \
      --set branch=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} \
      --set namespace=${NAMESPACE} \
      -f - \
      < ${CI_PROJECT_DIR}/.signadot/sbx-noop.yaml

      # Run the proxy
      echo "Starting signadot proxy..."
      signadot local proxy --sandbox ${SANDBOX_NAME} \
        --map http://frontend.${NAMESPACE}:8080@localhost:38080 > /tmp/signadot-proxy.log &
      PROXY_PID=$!
      sleep 1
      cat /tmp/signadot-proxy.log

      # Execute the tests
      echo "Executing tests..."
      go install github.com/jstemmer/go-junit-report/v2@latest
      TEST_FRONTEND_ADDR=localhost:38080 TEST_TARGET_WORKLOAD=driver TEST_SANDBOX_NAME=${SANDBOX_NAME} go test -v \
        ${CI_PROJECT_DIR}/services/frontend/ | go-junit-report -set-exit-code -out integration-report.xml

      # Stop the proxy
      cat /tmp/signadot-proxy.log
      kill ${PROXY_PID}

      echo "Deleting sandbox..."
      signadot sandbox delete ${SANDBOX_NAME}

  artifacts:
    when: always
    paths:
      - integration-report.xml
    reports:
      junit: integration-report.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
